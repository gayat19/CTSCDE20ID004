using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the formingMagicSquare function below.
    static int formingMagicSquare(int[][] s) {
        int cost = int.MaxValue;
        int[,] t = {
                {4,9,2,3,5,7,8,1,6},
                {4,3,8,9,5,1,2,7,6},
                {2,9,4,7,5,3,6,1,8},
                {2,7,6,9,5,1,4,3,8},
                {8,1,6,3,5,7,4,9,2},
                {8,3,4,1,5,9,6,7,2},
                {6,7,2,1,5,9,8,3,4},
                {6,1,8,7,5,3,2,9,4},
        };

        for(int i=0; i<8; i++) {
            int dif = Math.Abs(t[i,0] - s[0][0]) + Math.Abs(t[i,1] - s[0][1]) + Math.Abs(t[i,2] - s[0][2]) 
                    + Math.Abs(t[i,3] - s[1][0]) + Math.Abs(t[i,4] - s[1][1]) + Math.Abs(t[i,5] - s[1][2]) 
                    + Math.Abs(t[i,6] - s[2][0]) + Math.Abs(t[i,7] - s[2][1]) + Math.Abs(t[i,8] - s[2][2]);
            if(dif < cost)
                cost = dif;
        }

        return cost;

    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int[][] s = new int[3][];

        for (int i = 0; i < 3; i++) {
            s[i] = Array.ConvertAll(Console.ReadLine().Split(' '), sTemp => Convert.ToInt32(sTemp));
        }

        int result = formingMagicSquare(s);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
